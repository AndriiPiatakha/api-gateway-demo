spring.application.name=api-gateway
server.port=8082
spring.main.web-application-type=reactive

spring.cloud.gateway.server.webflux.routes[0].id=user-service
spring.cloud.gateway.server.webflux.routes[0].uri=http://localhost:8080
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/users/**

#spring.cloud.gateway.server.webflux.routes[1].id=product-service
#spring.cloud.gateway.server.webflux.routes[1].uri=http://localhost:8083
#spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/products/**

# === Service configuration for LoadBalancer Demo ===
spring.cloud.gateway.server.webflux.routes[1].id=user-service-lb
spring.cloud.gateway.server.webflux.routes[1].uri=lb://user-service-lb
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/users-lb/**

# === LoadBalancer static instances via discovery client simple ===
spring.cloud.loadbalancer.health-check.refetch-instances=true
spring.cloud.loadbalancer.health-check.refetch-instances-interval=30s
spring.cloud.loadbalancer.health-check.interval=5s
spring.cloud.loadbalancer.health-check.path.default=/actuator/health
spring.cloud.loadbalancer.health-check.initial-delay=10s

spring.cloud.discovery.client.simple.instances.user-service-lb[0].instanceId=instance1
spring.cloud.discovery.client.simple.instances.user-service-lb[0].serviceId=user-service-lb
spring.cloud.discovery.client.simple.instances.user-service-lb[0].host=localhost
spring.cloud.discovery.client.simple.instances.user-service-lb[0].port=8080

spring.cloud.discovery.client.simple.instances.user-service-lb[1].instanceId=instance2
spring.cloud.discovery.client.simple.instances.user-service-lb[1].serviceId=user-service-lb
spring.cloud.discovery.client.simple.instances.user-service-lb[1].host=localhost
spring.cloud.discovery.client.simple.instances.user-service-lb[1].port=8081